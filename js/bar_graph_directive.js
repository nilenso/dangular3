// Generated by CoffeeScript 1.6.3
(function() {
  angular.module("App").directive("d3BarGraph", function() {
    return {
      restrict: "E",
      scope: {
        data: "="
      },
      link: function(scope, element, attrs) {
        var direction, height, margin, svg, width, x, y;
        direction = attrs.direction || "vertical";
        margin = {
          top: 20,
          right: 20,
          bottom: 20,
          left: 20
        };
        width = (parseInt(attrs.width) || 960) - margin.left - margin.right;
        height = (parseInt(attrs.height) || 500) - margin.top - margin.bottom;
        svg = d3.select(element[0]).append("svg").attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
        if (direction === "horizontal") {
          x = d3.scale.linear().range([0, width]);
          y = d3.scale.ordinal().rangeRoundBands([0, height], .2);
          x.domain(d3.extent(scope.data, function(d) {
            return d.value;
          })).nice();
          y.domain(scope.data.map(function(d) {
            return d.key;
          }));
          return svg.selectAll(".bar").data(scope.data).enter().append("rect").attr("class", function(d) {
            if (d.value < 0) {
              return "bar negative";
            } else {
              return "bar positive";
            }
          }).attr("x", function(d) {
            return x(Math.min(0, d.value));
          }).attr("y", function(d) {
            return y(d.key);
          }).attr("width", function(d) {
            return Math.abs(x(d.value) - x(0));
          }).attr("height", y.rangeBand());
        } else if (direction === "vertical") {
          x = d3.scale.ordinal().rangeRoundBands([0, width], .1);
          y = d3.scale.linear().range([height, 0]);
          x.domain(scope.data.map(function(d) {
            return d.key;
          }));
          y.domain([
            d3.min(scope.data, function(d) {
              return d.value;
            }), d3.max(scope.data, function(d) {
              return d.value;
            })
          ]);
          return svg.selectAll(".bar").data(scope.data).enter().append("rect").attr("class", function(d) {
            if (d.value < 0) {
              return "bar negative";
            } else {
              return "bar positive";
            }
          }).attr("x", function(d) {
            return x(d.key);
          }).attr("y", function(d) {
            return y(Math.max(1, d.value));
          }).attr("width", x.rangeBand()).attr("height", function(d) {
            return Math.abs(y(d.value) - y(0));
          });
        }
      }
    };
  });

}).call(this);
